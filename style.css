
.grid-conainer {
  background-color: #eee;
  max-width: 900px;
  margin: 0 auto;
  display: grid;
  /* grid-template-columns: 300px 300px 300px; */
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: 100px 200px 300px;
  column-gap: 10px;
  row-gap: 20px;
  justify-items: stretch; /* default value */
  /* justify-items: end; align at the end of the allotted columns */
  align-items: stretch; /* default value */
}

.grid-conainer > div {
  background-color: #ccc;
  text-align: center;
  padding: 20px;
  border: 1px solid #777;
}

.grid-conainer > div:nth-child(1) {
  grid-column: 1 / span 2; /* start at position 1 and  span this 2 columns in width == span 2*/ 
}

.grid-conainer > div:nth-child(2) {
  grid-column: span 3; /* When we don't add a start position it automaticaly start at the next available position*/ 
}

.grid-conainer > div:nth-child(3) {
  grid-column: span 1; /* default value*/ 
}

.grid-conainer > div:nth-child(4) {
  grid-column: 2 / 6; /* start at line 2 up to the 6th column grid line or the end grid line */ 
  align-self: end;
}

.grid-conainer > div:nth-child(5) {
  grid-column: span 3; /* 3 columns in width and since there is not space it goes to the next line */ 
}

.grid-conainer > div:nth-child(6) {
  grid-column: span 3;
  justify-self: end;
  align-self: start;
}
/* -------------------------------- */
/* I do have 4 items in the grid contain*/
.grid-container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr; /* the last one should be on the second row line */
  gap: 20px;
  max-width: 1200px;
  margin: 20px auto;
}

article
article img {
  border: 1px solid #777;
  width: 100%; /* Make the image and the title to only take the full width of the grid item in order to force item sum to contain the container width*/ 
}

article.featured_one {
  grid-column: span 3; /* Take all 3 columns in width  and two following will go auttomaticaly underneath to the next row and they all take one columns in the width*/
  /* let's create a nested grid inside this grid item */
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  align-items: center; /* align the items vertically in the center */
}

/* responsive */
@media screen and (max-width: 980px) {
  article {
    grid-template-columns: 3rem; /* make it one column in width */
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: ccenter;
  }
}

/* responsive */
@media screen and (max-width: 760px) {
  article {
    display: block; /* make it one column in width */
  }
}